/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import app.FuncionesJSON;
import app.Funciones_Ficheros;
import clases_proyecto.Cliente;
import estructuras.arbolB.ArbolB;
import estructuras.arbol_abb.AbbTree;
import estructuras.arbol_avl.AvlTree;
import estructuras.linkedlist.LinkedList;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Melissa
 */
public class Modulo_Cliente_CargaMasiva extends javax.swing.JFrame {

    /*=========================DECLARACIONES DE VARIABLES===============================*/
    Funciones_Ficheros fFicheros = new Funciones_Ficheros();
    FuncionesJSON fJSON = new FuncionesJSON();
    public Cliente clienteRegistrado = null;
    ArbolB<Cliente> arbolClientes = null;

    /**
     * Creates new form Modulo_Cliente_CargaMasiva
     */
    public Modulo_Cliente_CargaMasiva() {
        initComponents();
    }

    /**
     * Constructor de mi JForm pero con el cliente registrado actualmente.
     *
     * @param clienteRegistrado
     */
    public Modulo_Cliente_CargaMasiva(Cliente clienteRegistrado, ArbolB<Cliente> arbolClientes) {
        this.clienteRegistrado = clienteRegistrado;
        this.arbolClientes = arbolClientes;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Carga masiva de capas");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Carga masiva de imagenes");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Carga masiva de álbumes");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Regresar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Árbol ABB capas", "Árbol AVL imagenes", "Estructura álbumes" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4)
                    .addComponent(jButton3)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 393, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 218, Short.MAX_VALUE)
                        .addComponent(jButton4))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Carga masiva CAPAS.
     *
     * @param evt
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            clienteRegistrado.setArbol_CapasGenerales(new AbbTree<>());
            String pathCapas = "./Clientes/Cliente_" + clienteRegistrado.getDPI() + "/Capas";
            fFicheros.vaciar_Directorio(pathCapas + "/Imagenes_Con_Conexiones");
            fFicheros.vaciar_Directorio(pathCapas + "/Imagenes_Sin_Conexiones");
            fFicheros.vaciar_Directorio(pathCapas + "/Neato_Con_Conexiones");
            fFicheros.vaciar_Directorio(pathCapas + "/Neato_Sin_Conexiones");
            fJSON.leerJSON_Capas(this, fFicheros, pathCapas);
            System.out.println("Se generaron las capas con éxito.");
        } catch (Exception e) {
            System.out.println("Error en el método JSON CAPAS.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * Carga masiva IMAGENES
     *
     * @param evt
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            if (!clienteRegistrado.getArbol_CapasGenerales().arbolVacio()) {
                clienteRegistrado.setArbol_Imagenes(new AvlTree<>());
                String pathImagenes = "./Clientes/Cliente_" + clienteRegistrado.getDPI() + "/Imagenes";
                fFicheros.vaciar_Directorio(pathImagenes + "/Neato_Imagenes");
                fFicheros.vaciar_Directorio(pathImagenes + "/Imagenes_Puras");
                fJSON.leerJSON_Imagenes(this, fFicheros, pathImagenes);
                System.out.println("Se generaron las imagenes con éxito.");
            }else{
                JOptionPane.showMessageDialog(this, "No posee capas actualmente, se necesita el ingreso de capas.");
            }
        } catch (Exception e) {
            System.out.println("Error en el método JSON IMAGENES.");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        String rutaImagenes = "";
        String nombreFinalImagen = "";
        if (jComboBox1.getSelectedItem().toString().equals("Árbol ABB capas")) {
            System.out.println("Eligió mostrar el árbol de capas.");
            System.out.println("./Clientes/Cliente_" + clienteRegistrado.getDPI() + "/Capas/Arbol_ABB_Capas/Arbol_ABB_Capas.png");
            mostrarImagen("./Clientes/Cliente_" + clienteRegistrado.getDPI() + "/Capas/Arbol_ABB_Capas/Arbol_ABB_Capas.png");
        } else if (jComboBox1.getSelectedItem().toString().equals("Árbol AVL imagenes")) {
            System.out.println("./Clientes/Cliente_" + clienteRegistrado.getDPI() + "/Imagenes/Arbol_AVL_Imagenes/Arbol_AVL_Imagenes.png");
            mostrarImagen("./Clientes/Cliente_" + clienteRegistrado.getDPI() + "/Imagenes/Arbol_AVL_Imagenes/Arbol_AVL_Imagenes.png");
            System.out.println("Eligió mostrar el árbol de imagenes.");
        } else {
            System.out.println("./Clientes/Cliente_" + clienteRegistrado.getDPI() + "/Imagenes/Arbol_AVL_Imagenes/Arbol_AVL_Imagenes.png");
            mostrarImagen("./Clientes/Cliente_" + clienteRegistrado.getDPI() + "/Albumes/Lista_Albumes.png");
            System.out.println("Eligió mostrar la lista de albumes.");
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Modulo_Cliente mc = new Modulo_Cliente(clienteRegistrado, arbolClientes);
        mc.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            if (!clienteRegistrado.getArbol_Imagenes().arbolVacio()) {
                clienteRegistrado.setLista_Albumes(new LinkedList<>());
                String pathAlbumes = "./Clientes/Cliente_" + clienteRegistrado.getDPI() + "/Albumes";
                fFicheros.vaciar_Directorio(pathAlbumes);
                fJSON.leerJSON_Albumes(this, fFicheros, pathAlbumes);
                System.out.println("Se genero la lista de álbumes con éxito.");
            }else{
                JOptionPane.showMessageDialog(this, "No posee imágenes actualmente, se necesita el ingreso de imágenes.");
            }
        } catch (Exception e) {
            System.out.println("Error en el método JSON ÁLBUMES.");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    public void mostrarImagen(String rutaImagen) {
        ImageIcon imagen = new ImageIcon(rutaImagen);
        try {
            BufferedImage bimg = ImageIO.read(new File(rutaImagen));
            ImageIcon icono = new ImageIcon(imagen.getImage().getScaledInstance(bimg.getWidth(), bimg.getHeight(), Image.SCALE_SMOOTH));
            jScrollPane1.setViewportView(new JLabel(icono));
        } catch (Exception error) {

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Modulo_Cliente_CargaMasiva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Modulo_Cliente_CargaMasiva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Modulo_Cliente_CargaMasiva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Modulo_Cliente_CargaMasiva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Modulo_Cliente_CargaMasiva().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
