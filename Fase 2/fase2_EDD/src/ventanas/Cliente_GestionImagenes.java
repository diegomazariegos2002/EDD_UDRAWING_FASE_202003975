/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import clases_proyecto.Capa;
import clases_proyecto.Cliente;
import clases_proyecto.Imagen;
import estructuras.arbolB.ArbolB;
import estructuras.linkedlist.LinkedList;
import estructuras.linkedlist.LinkedList_Node;
import estructuras.matriz_dispersa.Matriz;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Melissa
 */
public class Cliente_GestionImagenes extends javax.swing.JFrame {

    Cliente clienteRegistrado = null;
    int contadorImagenesCarpeta;
    ArbolB<Cliente> arbolClientes = null;
    LinkedList<Capa> pilaCapas = null;

    /**
     * Creates new form Cliente_GestionImagenes
     */
    public Cliente_GestionImagenes() {
        initComponents();
    }

    /**
     * Constructor de mi JForm pero con el cliente registrado actualmente.
     *
     * @param clienteRegistrado
     */
    public Cliente_GestionImagenes(Cliente clienteRegistrado, ArbolB<Cliente> arbolClientes) {
        initComponents();
        this.clienteRegistrado = clienteRegistrado;
        this.arbolClientes = arbolClientes;
        this.pilaCapas = new LinkedList<Capa>();
        contadorImagenesCarpeta = 0;
        jPanelArbolImagenes.setVisible(false);
        jPanelPorCapa.setVisible(false);
        jPanelRecorridoLimitado.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonRegresar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTextFieldIdRegistrar = new javax.swing.JTextField();
        jTextFieldIdEliminar = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButtonRegistrarImagen = new javax.swing.JButton();
        jButtonEliminarImagen = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxTipoCreacionImagen = new javax.swing.JComboBox<>();
        jPanelArbolImagenes = new javax.swing.JPanel();
        jButtonCrearAmplitud = new javax.swing.JButton();
        jTextFieldIdImagenGenerar = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanelRecorridoLimitado = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldNumCapas = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jComboBoxTipoRecorrido = new javax.swing.JComboBox<>();
        jButtonCrearPorRecorrido = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldRecorridoGenerado = new javax.swing.JTextField();
        jPanelPorCapa = new javax.swing.JPanel();
        jButtonApilarCapas = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldIdCapaApilar = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jButtonCrearImagenCapas = new javax.swing.JButton();
        jButtonLimpiarPilaImagenes = new javax.swing.JButton();
        jTextFieldPilaCapas = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jComboBoxImagenesMostrar = new javax.swing.JComboBox<>();
        jButtonSiguienteImagen = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabelImagenActual = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonRegresar.setText("Regresar");
        jButtonRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegresarActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Gestión de imágenes"));
        jPanel1.setToolTipText("");

        jLabel1.setText("Ingresar id para registra imagen:");

        jLabel2.setText("Ingresar id para eliminar imagen:");

        jButtonRegistrarImagen.setText("Registrar imagen");
        jButtonRegistrarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegistrarImagenActionPerformed(evt);
            }
        });

        jButtonEliminarImagen.setText("Eliminar imagen");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldIdRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldIdEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonRegistrarImagen, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonEliminarImagen, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldIdRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonRegistrarImagen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldIdEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonEliminarImagen)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Generación de imágenes"));

        jLabel4.setText("Escoja un método para generar la imagen:");

        jComboBoxTipoCreacionImagen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Por recorrido limitado", "Por árbol de imágenes", "Por capa" }));
        jComboBoxTipoCreacionImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTipoCreacionImagenActionPerformed(evt);
            }
        });

        jPanelArbolImagenes.setBorder(javax.swing.BorderFactory.createTitledBorder("Recorrido árbol de capas en imagen (en amplitud)"));

        jButtonCrearAmplitud.setText("Crear imagen buscando el id ingresado");
        jButtonCrearAmplitud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCrearAmplitudActionPerformed(evt);
            }
        });

        jLabel3.setText("Ingrese el id de la imagen a generar: ");

        javax.swing.GroupLayout jPanelArbolImagenesLayout = new javax.swing.GroupLayout(jPanelArbolImagenes);
        jPanelArbolImagenes.setLayout(jPanelArbolImagenesLayout);
        jPanelArbolImagenesLayout.setHorizontalGroup(
            jPanelArbolImagenesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelArbolImagenesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelArbolImagenesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonCrearAmplitud, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelArbolImagenesLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldIdImagenGenerar, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanelArbolImagenesLayout.setVerticalGroup(
            jPanelArbolImagenesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelArbolImagenesLayout.createSequentialGroup()
                .addGroup(jPanelArbolImagenesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldIdImagenGenerar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCrearAmplitud)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelRecorridoLimitado.setBorder(javax.swing.BorderFactory.createTitledBorder("Crear imagen por recorrido"));

        jLabel5.setText("Ingrese el número de capas a utilizar:");

        jLabel6.setText("Seleccione el tipo de recorrido:");

        jComboBoxTipoRecorrido.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PreOrder", "InOrder", "PostOrder" }));

        jButtonCrearPorRecorrido.setText("Crear imagen con el id ingresado");
        jButtonCrearPorRecorrido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCrearPorRecorridoActionPerformed(evt);
            }
        });

        jLabel11.setText("Recorrido generado: ");

        javax.swing.GroupLayout jPanelRecorridoLimitadoLayout = new javax.swing.GroupLayout(jPanelRecorridoLimitado);
        jPanelRecorridoLimitado.setLayout(jPanelRecorridoLimitadoLayout);
        jPanelRecorridoLimitadoLayout.setHorizontalGroup(
            jPanelRecorridoLimitadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRecorridoLimitadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelRecorridoLimitadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRecorridoLimitadoLayout.createSequentialGroup()
                        .addGroup(jPanelRecorridoLimitadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanelRecorridoLimitadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonCrearPorRecorrido, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanelRecorridoLimitadoLayout.createSequentialGroup()
                                .addGroup(jPanelRecorridoLimitadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldNumCapas, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBoxTipoRecorrido, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())))
                    .addGroup(jPanelRecorridoLimitadoLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldRecorridoGenerado))))
        );
        jPanelRecorridoLimitadoLayout.setVerticalGroup(
            jPanelRecorridoLimitadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRecorridoLimitadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelRecorridoLimitadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldNumCapas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelRecorridoLimitadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jComboBoxTipoRecorrido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonCrearPorRecorrido)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelRecorridoLimitadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldRecorridoGenerado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jPanelPorCapa.setBorder(javax.swing.BorderFactory.createTitledBorder("Recorrido por capas seleccionadas"));

        jButtonApilarCapas.setText("Apilar capa con id buscado de capa");
        jButtonApilarCapas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonApilarCapasActionPerformed(evt);
            }
        });

        jLabel7.setText("Ingresar id de capa: ");

        jLabel8.setText("Pila de imagenes agregada: ");

        jButtonCrearImagenCapas.setText("Crear imagen con pila de capas");
        jButtonCrearImagenCapas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCrearImagenCapasActionPerformed(evt);
            }
        });

        jButtonLimpiarPilaImagenes.setText("Limpiar pila de imágenes");
        jButtonLimpiarPilaImagenes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarPilaImagenesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelPorCapaLayout = new javax.swing.GroupLayout(jPanelPorCapa);
        jPanelPorCapa.setLayout(jPanelPorCapaLayout);
        jPanelPorCapaLayout.setHorizontalGroup(
            jPanelPorCapaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPorCapaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPorCapaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPorCapaLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldIdCapaApilar, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldPilaCapas))
                    .addGroup(jPanelPorCapaLayout.createSequentialGroup()
                        .addGroup(jPanelPorCapaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButtonLimpiarPilaImagenes, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonApilarCapas, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonCrearImagenCapas)))
                .addContainerGap())
        );
        jPanelPorCapaLayout.setVerticalGroup(
            jPanelPorCapaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPorCapaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPorCapaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextFieldIdCapaApilar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jTextFieldPilaCapas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelPorCapaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonApilarCapas)
                    .addComponent(jButtonCrearImagenCapas, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonLimpiarPilaImagenes)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelArbolImagenes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelPorCapa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelRecorridoLimitado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxTipoCreacionImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxTipoCreacionImagen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelRecorridoLimitado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelArbolImagenes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelPorCapa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        jScrollPane1.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                jScrollPane1MouseWheelMoved(evt);
            }
        });

        jComboBoxImagenesMostrar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mostrar árbol de imágenes", "Mostrar imágenes" }));
        jComboBoxImagenesMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxImagenesMostrarActionPerformed(evt);
            }
        });

        jButtonSiguienteImagen.setText("Siguiente imagen");
        jButtonSiguienteImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSiguienteImagenActionPerformed(evt);
            }
        });

        jLabel10.setText("Imagen Actual: ");

        jLabelImagenActual.setText("...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jButtonRegresar))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1)
                                .addGap(13, 13, 13))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBoxImagenesMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelImagenActual)
                                .addContainerGap(274, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(231, 231, 231)
                        .addComponent(jButtonSiguienteImagen)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxImagenesMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jLabelImagenActual))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonSiguienteImagen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCrearAmplitudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCrearAmplitudActionPerformed
        try {
            if (!jTextFieldIdImagenGenerar.getText().equals("")) {

                Imagen imagenBuscada = new Imagen(Integer.valueOf(jTextFieldIdImagenGenerar.getText()));
                imagenBuscada = clienteRegistrado.getArbol_Imagenes().getValue(imagenBuscada);
                if (imagenBuscada != null) {

                    String rutaImagenes = "./Clientes/Cliente_" + clienteRegistrado.getDPI() + "/Imagenes";
                    imagenBuscada.unirCapasAmplitud();
                    imagenBuscada.getCapasUnidas().crearFicheroNeato_MatrizSinConexiones("Imagen_" + imagenBuscada.getId_Imagen(), rutaImagenes + "/Neato_Imagenes", rutaImagenes + "/Imagenes_Puras");
                    JOptionPane.showMessageDialog(this, "Imagen generada con éxito!!!");
                    rutaImagenes += "/Imagenes_Puras/Imagen_" + imagenBuscada.getId_Imagen() + ".png";
                    jLabelImagenActual.setText("Imagen_" + imagenBuscada.getId_Imagen() + ".png");
                    mostrarImagenCompacta(rutaImagenes);

                } else {
                    JOptionPane.showMessageDialog(this, "El id que ingreso no existe dentro del árbol de imágenes, intente de nuevo con otro.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Es necesario que llene el campo de ingreso del id de busqueda.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Algo fallo al generar la imagen, elimine la imagen y vuelva intentar más tarde, asegurese de que todo este correcto.");
        }
    }//GEN-LAST:event_jButtonCrearAmplitudActionPerformed

    private void jComboBoxImagenesMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxImagenesMostrarActionPerformed
        String rutaImagenes = "";
        String nombreFinalImagen = "";
        if (jComboBoxImagenesMostrar.getSelectedItem().toString().equals("Mostrar árbol de imágenes")) {
            System.out.println("Eligió mostrar el árbol avl de imágenes.");
            System.out.println("./Clientes/Cliente_" + clienteRegistrado.getDPI() + "/Imagenes/Arbol_AVL_Imagenes/Arbol_AVL_Imagenes.png");
            jLabelImagenActual.setText("Arbol_AVL_Imagenes.png");
            mostrarImagen("./Clientes/Cliente_" + clienteRegistrado.getDPI() + "/Imagenes/Arbol_AVL_Imagenes/Arbol_AVL_Imagenes.png");
        } else {
            System.out.println("Eligió mostrar imagenes generadas.");
            contadorImagenesCarpeta = 0;
            rutaImagenes = "./Clientes/Cliente_" + clienteRegistrado.getDPI() + "/Imagenes/Imagenes_Puras/";
            File carpeta = new File(rutaImagenes);
            nombreFinalImagen = carpeta.list()[contadorImagenesCarpeta];
            rutaImagenes += nombreFinalImagen;
            jLabelImagenActual.setText(nombreFinalImagen);
            mostrarImagenCompacta(rutaImagenes);
            contadorImagenesCarpeta++;
        }
    }//GEN-LAST:event_jComboBoxImagenesMostrarActionPerformed

    private void jScrollPane1MouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_jScrollPane1MouseWheelMoved

    }//GEN-LAST:event_jScrollPane1MouseWheelMoved

    private void jButtonRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegresarActionPerformed
        Modulo_Cliente mc = new Modulo_Cliente(clienteRegistrado, arbolClientes);
        mc.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButtonRegresarActionPerformed

    private void jButtonSiguienteImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSiguienteImagenActionPerformed
        if (jComboBoxImagenesMostrar.getSelectedItem().toString().equals("Mostrar imágenes")) {
            String rutaImagenes = "./Clientes/Cliente_" + clienteRegistrado.getDPI() + "/Imagenes/Imagenes_Puras/";
            File carpeta = new File(rutaImagenes);

            if (contadorImagenesCarpeta >= carpeta.list().length) {
                contadorImagenesCarpeta = 0;
            }
            String nombreFinalImagen = carpeta.list()[contadorImagenesCarpeta];
            rutaImagenes += nombreFinalImagen;
            jLabelImagenActual.setText(nombreFinalImagen);
            mostrarImagenCompacta(rutaImagenes);
            contadorImagenesCarpeta++;
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione \"Mostrar imágenes para avanzar\".");
        }
    }//GEN-LAST:event_jButtonSiguienteImagenActionPerformed

    private void jButtonRegistrarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegistrarImagenActionPerformed
        if (!jTextFieldIdRegistrar.getText().equals("")) {
            Imagen imagenBusqueda = new Imagen(Integer.valueOf(jTextFieldIdRegistrar.getText()));
            imagenBusqueda = clienteRegistrado.getArbol_Imagenes().getValue(imagenBusqueda);
            if (imagenBusqueda == null) {
                //No existe una imagen con ese id por lo que se procede a registrar la nueva imagen dentro del árbol.
                Imagen newImagen = new Imagen(Integer.valueOf(jTextFieldIdRegistrar.getText()));
                clienteRegistrado.getArbol_Imagenes().insert(newImagen);

                //Generar nuevo árbol .png con la imagen registrada.
                String rutaArbolImagenes = "./Clientes/Cliente_" + clienteRegistrado.getDPI() + "/Imagenes/Arbol_AVL_Imagenes";
                clienteRegistrado.getArbol_Imagenes().crearFicheroDot_Arbol("Arbol_AVL_Imagenes", rutaArbolImagenes, rutaArbolImagenes);
                JOptionPane.showMessageDialog(this, "Se registro la nueva imagen con éxito!!!");

                //Reiniciar jScrollPane
                //Mostrar imagen
                System.out.println("./Clientes/Cliente_" + clienteRegistrado.getDPI() + "/Imagenes/Arbol_AVL_Imagenes/Arbol_AVL_Imagenes.png");
                jLabelImagenActual.setText("Arbol_AVL_Imagenes.png");
                mostrarImagen("./Clientes/Cliente_" + clienteRegistrado.getDPI() + "/Imagenes/Arbol_AVL_Imagenes/Arbol_AVL_Imagenes.png");
            } else {
                JOptionPane.showMessageDialog(this, "Ya existe una imagen con ese id, intente con un id diferente.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Es necesario llenar el campo de 'id de registro'.");
        }
    }//GEN-LAST:event_jButtonRegistrarImagenActionPerformed

    private void jButtonCrearPorRecorridoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCrearPorRecorridoActionPerformed
        if (!jTextFieldNumCapas.getText().equals("")) {
            try {
                if (jComboBoxTipoRecorrido.getSelectedItem().equals("PreOrder")) {
                    Imagen imagen = new Imagen(0);
                    int numCapas = Integer.valueOf(jTextFieldNumCapas.getText());
                    imagen.unirCapasPreOrden(this, clienteRegistrado, clienteRegistrado.getArbol_CapasGenerales(), numCapas);
                    JOptionPane.showMessageDialog(this, "Imagen generada.");
                    jLabelImagenActual.setText("Imagen_PreOrden.png");
                    mostrarImagenCompacta("./Clientes/Cliente_" + clienteRegistrado.getDPI() + "/Imagenes/Imagenes_Puras/Imagen_PreOrden.png");
                } else if (jComboBoxTipoRecorrido.getSelectedItem().equals("InOrder")) {
                    Imagen imagen = new Imagen(0);
                    int numCapas = Integer.valueOf(jTextFieldNumCapas.getText());
                    imagen.unirCapasInOrden(this, clienteRegistrado, clienteRegistrado.getArbol_CapasGenerales(), numCapas);
                    JOptionPane.showMessageDialog(this, "Imagen generada.");
                    jLabelImagenActual.setText("Imagen_InOrden.png");
                    mostrarImagenCompacta("./Clientes/Cliente_" + clienteRegistrado.getDPI() + "/Imagenes/Imagenes_Puras/Imagen_InOrden.png");
                } else {
                    Imagen imagen = new Imagen(0);
                    int numCapas = Integer.valueOf(jTextFieldNumCapas.getText());
                    imagen.unirCapasPostOrden(this, clienteRegistrado, clienteRegistrado.getArbol_CapasGenerales(), numCapas);
                    JOptionPane.showMessageDialog(this, "Imagen generada.");
                    jLabelImagenActual.setText("Imagen_PostOrden.png");
                    mostrarImagenCompacta("./Clientes/Cliente_" + clienteRegistrado.getDPI() + "/Imagenes/Imagenes_Puras/Imagen_PostOrden.png");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Ingrese un número válido.");
            }

        } else {
            JOptionPane.showMessageDialog(this, "Es necesario llenar el campo de 'número de capas'.");
        }
    }//GEN-LAST:event_jButtonCrearPorRecorridoActionPerformed

    private void jComboBoxTipoCreacionImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTipoCreacionImagenActionPerformed
        if (jComboBoxTipoCreacionImagen.getSelectedItem().equals("Por recorrido limitado")) {
            jPanelRecorridoLimitado.setVisible(true);
            jPanelPorCapa.setVisible(false);
            jPanelArbolImagenes.setVisible(false);
        } else if (jComboBoxTipoCreacionImagen.getSelectedItem().equals("Por árbol de imágenes")) {
            jPanelRecorridoLimitado.setVisible(false);
            jPanelPorCapa.setVisible(false);
            jPanelArbolImagenes.setVisible(true);
        } else {
            jPanelRecorridoLimitado.setVisible(false);
            jPanelPorCapa.setVisible(true);
            jPanelArbolImagenes.setVisible(false);
        }
    }//GEN-LAST:event_jComboBoxTipoCreacionImagenActionPerformed

    private void jButtonApilarCapasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonApilarCapasActionPerformed
        if (!jTextFieldIdCapaApilar.getText().equals("")) {
            try {
                Capa capaABuscar = new Capa(Integer.valueOf(jTextFieldIdCapaApilar.getText()));
                capaABuscar = clienteRegistrado.getArbol_CapasGenerales().getValue(capaABuscar);
                if (capaABuscar != null) {
                    this.pilaCapas.insertElement_AtBeggining(capaABuscar);
                    /*Parte de impresión de los elementos de la pila de capas en el JTextField*/
                    LinkedList_Node<Capa> nodoActual = pilaCapas.getCabezaLista();
                    String cadena = "";
                    while (nodoActual != null) {
                        cadena += String.valueOf(((Capa) nodoActual.getValor()).getId_Capa());
                        cadena += ", ";
                        nodoActual = nodoActual.siguiente;
                    }
                    this.jTextFieldPilaCapas.setText(cadena);
                } else {
                    JOptionPane.showMessageDialog(this, "No existe una capa en el árbol general de capas con el id ingresado, intente de nuevo.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Ingrese un dato válido en el campo del id de la capa a apilar.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Es obligatorio llenar el id de la capa a apilar.");
        }
    }//GEN-LAST:event_jButtonApilarCapasActionPerformed

    private void jButtonLimpiarPilaImagenesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarPilaImagenesActionPerformed
        this.pilaCapas = new LinkedList<>();
        jTextFieldPilaCapas.setText("");
    }//GEN-LAST:event_jButtonLimpiarPilaImagenesActionPerformed

    private void jButtonCrearImagenCapasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCrearImagenCapasActionPerformed
        if (this.pilaCapas.getlength() != 0) {
            try {
                Matriz capasUnidas = new Matriz();
                /*Parte de apilacion de las matrices de cada capa*/
                LinkedList_Node<Capa> nodoActual = pilaCapas.getCabezaLista();
                String cadena = "";
                while (nodoActual != null) {
                    /*Parte de apilación de las capas*/
                    capasUnidas.superPonerMatriz(((Capa) nodoActual.getValor()).getMatriz_Capa());
                    nodoActual = nodoActual.siguiente;
                }
                String rutaImagenes = "./Clientes/Cliente_" + clienteRegistrado.getDPI() + "/Imagenes";
                capasUnidas.crearFicheroNeato_MatrizSinConexiones("Imagen_PilaImagenes", rutaImagenes + "/Neato_Imagenes", rutaImagenes + "/Imagenes_Puras");
                JOptionPane.showMessageDialog(this, "Imagen generada con éxito!!!");
                mostrarImagenCompacta("./Clientes/Cliente_" + clienteRegistrado.getDPI() + "/Imagenes/Imagenes_Puras/Imagen_PilaImagenes.png");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Algo paso mal :(, intente de nuevo más tarde.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "No hay capas en la pila de capas para crear una imagen.");
        }
    }//GEN-LAST:event_jButtonCrearImagenCapasActionPerformed

    /**
     * Método para mostrar la imagen en JscrollPane tal cual como es.
     *
     * @param rutaImagen
     */
    public void mostrarImagen(String rutaImagen) {
        ImageIcon imagen = new ImageIcon(rutaImagen);
        try {
            BufferedImage bimg = ImageIO.read(new File(rutaImagen));
            ImageIcon icono = new ImageIcon(imagen.getImage().getScaledInstance(bimg.getWidth(), bimg.getHeight(), Image.SCALE_SMOOTH));
            jScrollPane1.setViewportView(new JLabel(icono));
        } catch (Exception error) {

        }
    }

    /**
     * Método para mostrar la imagen en JscrollPane pero con el tamaño de este.
     *
     * @param rutaImagen
     */
    public void mostrarImagenCompacta(String rutaImagen) {
        ImageIcon imagen = new ImageIcon(rutaImagen);
        ImageIcon icono = new ImageIcon(imagen.getImage().getScaledInstance(jScrollPane1.getWidth(), jScrollPane1.getHeight(), Image.SCALE_SMOOTH));
        JLabel etiqueta = new JLabel(icono);
        jScrollPane1.setViewportView(etiqueta);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cliente_GestionImagenes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cliente_GestionImagenes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cliente_GestionImagenes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cliente_GestionImagenes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cliente_GestionImagenes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonApilarCapas;
    private javax.swing.JButton jButtonCrearAmplitud;
    private javax.swing.JButton jButtonCrearImagenCapas;
    private javax.swing.JButton jButtonCrearPorRecorrido;
    private javax.swing.JButton jButtonEliminarImagen;
    private javax.swing.JButton jButtonLimpiarPilaImagenes;
    private javax.swing.JButton jButtonRegistrarImagen;
    private javax.swing.JButton jButtonRegresar;
    private javax.swing.JButton jButtonSiguienteImagen;
    private javax.swing.JComboBox<String> jComboBoxImagenesMostrar;
    private javax.swing.JComboBox<String> jComboBoxTipoCreacionImagen;
    private javax.swing.JComboBox<String> jComboBoxTipoRecorrido;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelImagenActual;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelArbolImagenes;
    private javax.swing.JPanel jPanelPorCapa;
    private javax.swing.JPanel jPanelRecorridoLimitado;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldIdCapaApilar;
    private javax.swing.JTextField jTextFieldIdEliminar;
    private javax.swing.JTextField jTextFieldIdImagenGenerar;
    private javax.swing.JTextField jTextFieldIdRegistrar;
    private javax.swing.JTextField jTextFieldNumCapas;
    private javax.swing.JTextField jTextFieldPilaCapas;
    public javax.swing.JTextField jTextFieldRecorridoGenerado;
    // End of variables declaration//GEN-END:variables
}
